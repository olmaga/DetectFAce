<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body onload="init();startWebcam();">
     <p>
       <button onclick="snapshot();">Take Snapshot</button> 
    </p>
    <div class="half-size">
      <video onclick="snapshot(this);" width="720" height="450" id="video" controls autoplay></video>
    </div>
    <div class="fifth-size smilie-container">
      <img class="smilies" id="smilie-happiness" src="smile.png" style="display:none;"/>
      <img class="smilies" id="smilie-anger" src="anger.png" style="display:none;"/>
      <img class="smilies" id="smilie-disgust" src="disgust.png" style="display:none;"/>
      <img class="smilies" id="smilie-fear" src="fear.png" style="display:none;"/>
      <img class="smilies" id="smilie-neutral" src="neutral.png" style="display:none;"/>
      <img class="smilies" id="smilie-sadness" src="sadness.png" style="display:none;"/>
      <img class="smilies" id="smilie-surprise" src="surprise.png" style="display:none;"/>
      <span id="smilie-value"></span>
    </div>
    <div>
      <img src="smile.png" />
      <img src="anger.png" />
      <img src="disgust.png" />
      <img src="fear.png" />
      <img src="neutral.png" />
      <img src="sadness.png" />
      <img src="surprise.png" />
    </div>
    <canvas id="myCanvas" width="720" height="450"></canvas>  
  <p>
  </body>
  <script>
      //--------------------
      // GET USER MEDIA CODE
      //--------------------
          navigator.getUserMedia = ( navigator.getUserMedia ||
                             navigator.webkitGetUserMedia ||
                             navigator.mozGetUserMedia ||
                             navigator.msGetUserMedia);

      var video;
      var webcamStream;

      function startWebcam() {
        if (navigator.getUserMedia) {
           navigator.getUserMedia (

              // constraints
              {
                 video: true,
                 audio: false
              },

              // successCallback
              function(localMediaStream) {
                  video = document.querySelector('video');
                 video.src = window.URL.createObjectURL(localMediaStream);
                 webcamStream = localMediaStream;
              },

              // errorCallback
              function(err) {
                 console.log("The following error occured: " + err);
              }
           );
        } else {
           console.log("getUserMedia not supported");
        }  
      }

      function stopWebcam() {
          webcamStream.stop();
      }
      //---------------------
      // TAKE A SNAPSHOT CODE
      //---------------------
      var canvas, ctx;

      function init() {
        // Get the canvas and obtain a context for
        // drawing in it
        canvas = document.getElementById("myCanvas");

        ctx = canvas.getContext('2d');
      }

      function callback(response) {
          console.log(response);
          var emotion = response[0].faceAttributes.emotion;
          var max = 0;
          var maxProp = "";
          for(var prop in response[0].faceAttributes.emotion){
            if(emotion[prop]>max){
              maxProp = prop;
              max = emotion[prop];
            }
          }
          console.log(max, maxProp);
          var smilies = document.getElementsByClassName("smilies");
          for(var i=0;i<smilies.length; i++){
            smilies[i].style.display = "none";
          } 
          document.getElementById("smilie-" + maxProp).style.display = "inline-block";
          document.getElementById("smilie-value").innerHTML = max;
      }

      function snapshot() {
         // Draws current image from the video element into the canvas
        ctx.drawImage(video, 0,0, canvas.width, canvas.height);
        var img    = canvas.toDataURL("image/png");


        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/image", true);
        xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');

        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4) {
            callback(JSON.parse(xhr.response));
          }
        }

        // send the collected data as JSON
        xhr.send(JSON.stringify({base64:img}));
      }

  </script>

</html>
